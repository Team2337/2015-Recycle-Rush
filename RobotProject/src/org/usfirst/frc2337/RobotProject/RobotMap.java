// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2337.RobotProject;
    

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController chassisfrontLeft;
    public static SpeedController chassisbackLeft;
    public static SpeedController chassisfrontRight;
    public static SpeedController chassisbackRight;
    public static RobotDrive chassisrobotDrive;
    public static DigitalInput chassistoteSensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        chassisfrontLeft = new VictorSP(0);
        LiveWindow.addActuator("chassis", "frontLeft", (VictorSP) chassisfrontLeft);
        
        chassisbackLeft = new VictorSP(2);
        LiveWindow.addActuator("chassis", "backLeft", (VictorSP) chassisbackLeft);
        
        chassisfrontRight = new VictorSP(1);
        LiveWindow.addActuator("chassis", "frontRight", (VictorSP) chassisfrontRight);
        
        chassisbackRight = new VictorSP(3);
        LiveWindow.addActuator("chassis", "backRight", (VictorSP) chassisbackRight);
        
        chassisrobotDrive = new RobotDrive(chassisfrontLeft, chassisbackLeft,
              chassisfrontRight, chassisbackRight);
        
        chassisrobotDrive.setSafetyEnabled(true);
        chassisrobotDrive.setExpiration(0.1);
        chassisrobotDrive.setSensitivity(0.5);
        chassisrobotDrive.setMaxOutput(1.0);

        chassistoteSensor = new DigitalInput(2);
        LiveWindow.addSensor("chassis", "toteSensor", chassistoteSensor);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
