// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2337.RobotProject.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc2337.RobotProject.Robot;
import org.usfirst.frc2337.RobotProject.RobotMap;

/**
 * Drive for a specified time. May or may not be in a straight line. Linearly ramps up the speed.
 * 
 * @param seconds The time, in seconds, to drive for.
 */
public class AutonDriveForEncoderGyroIterative extends Command {
	private double distance;
	private double seconds = 5;
	private double gyroValue;
	private double kP = .08;
	private double moveDelta = 0.045;	//how much to increase each iteration
	private double move = 0;
	
    public AutonDriveForEncoderGyroIterative(double distance) {
    	this.distance = distance;    	

        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.chassis);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	setTimeout(seconds);
    	Robot.chassis.disable();
    	
    	move = 0;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	gyroValue = RobotMap.imu.getYaw();
    	
    	gyroValue = gyroValue * -kP;
    	
    	if (gyroValue > 0.5) {
    		gyroValue = .5;
    	}
    	if (gyroValue < -0.5) {
    		gyroValue = -0.5;
    	}
    	
    	move = move - moveDelta;
    	
    	if (move < -1) {
    		move = -1;
    	}
    	
    	Robot.chassis.driveMecanum(move, 0, gyroValue);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return Robot.chassis.getPosition() > distance;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.chassis.stopMotors();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.chassis.stopMotors();
    }
}
