// RobotBuilder Version: 1.5
//

package org.usfirst.frc2337.RobotProject.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2337.RobotProject.Robot;
import org.usfirst.frc2337.RobotProject.RobotMap;

/**
 * Turns to a degree in the clockwise direction (to a positive value)
 * 
 * @param degrees.
 */
public class AutonTurnDegreesCwPos extends Command {
	private double degrees;
	private double gyroValue;	
	private double seconds = 10;
	private double kP = .08;
	private double error = 0;
	private double turnValue = 0;

	
    public AutonTurnDegreesCwPos(double degrees) {
    	this.degrees = degrees;    	

        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.chassis);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	setTimeout(seconds);
    	Robot.chassis.disable();
    	RobotMap.imu.zeroYaw();
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	gyroValue = RobotMap.imu.getYaw();   	
    	error = (degrees - gyroValue); 			
    	turnValue = error * kP;		
   	
    	if (turnValue > 0.5) {
    		turnValue = .5;
    	}
    	if (turnValue < -0.5) {
    		turnValue = -0.5;
    	}
    	
    	Robot.chassis.driveMecanum(0, 0, turnValue);//gyroValue
  	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return RobotMap.imu.getYaw() > degrees || isTimedOut();
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.chassis.stopMotors();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.chassis.stopMotors();
    }
}
