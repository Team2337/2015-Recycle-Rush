// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2337.RobotProject.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc2337.RobotProject.Config;
import org.usfirst.frc2337.RobotProject.Robot;

/**
 *
 */


public class SetBasePosition extends Command {
	
    double basePosition;
	double top = Double.parseDouble(Config.getSetting("toppos"));
	double middle = Double.parseDouble(Config.getSetting("middlepos"));
	double bottom = Double.parseDouble(Config.getSetting("bottompos"));
    
    
    public SetBasePosition() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    public SetBasePosition(String baseType) {
    	if (baseType.equals("top")) {
    	    basePosition = top;
    	}
    	else if (baseType.equals("middle")) {
    		basePosition = middle;
    	} 
    	else if (baseType.equals("bottom")) {
    		basePosition = bottom;
    	} 
    }
    
    public double getPosition() {
    	return basePosition;
    }
    
    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
